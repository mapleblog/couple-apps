{
  "rules": {
    ".read": false,
    ".write": false,
    
    "users": {
      "$uid": {
        ".read": "$uid === auth.uid",
        ".write": "$uid === auth.uid",
        ".validate": "newData.hasChildren(['displayName', 'email', 'photoURL', 'createdAt'])",
        "displayName": {
          ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 100"
        },
        "email": {
          ".validate": "newData.isString() && newData.val().matches(/^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/)"
        },
        "photoURL": {
          ".validate": "newData.isString()"
        },
        "createdAt": {
          ".validate": "newData.isNumber()"
        },
        "lastLoginAt": {
          ".validate": "newData.isNumber()"
        },
        "$other": {
          ".validate": false
        }
      }
    },
    
    "couples": {
      "$coupleId": {
        ".read": "auth != null && (data.child('user1').val() === auth.uid || data.child('user2').val() === auth.uid)",
        ".write": "auth != null && (data.child('user1').val() === auth.uid || data.child('user2').val() === auth.uid || (!data.exists() && auth.uid != null))",
        ".validate": "newData.hasChildren(['user1', 'user2', 'createdAt'])",
        "user1": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "user2": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "createdAt": {
          ".validate": "newData.isNumber()"
        },
        "anniversaryDate": {
          ".validate": "newData.isString() && newData.val().matches(/^\\d{4}-\\d{2}-\\d{2}$/)"
        },
        "relationshipStatus": {
          ".validate": "newData.isString() && (newData.val() === 'dating' || newData.val() === 'engaged' || newData.val() === 'married')"
        },
        "$other": {
          ".validate": false
        }
      }
    },
    
    "loveNotes": {
      "$coupleId": {
        ".read": "auth != null && root.child('couples').child($coupleId).child('user1').val() === auth.uid || root.child('couples').child($coupleId).child('user2').val() === auth.uid",
        ".write": "auth != null && root.child('couples').child($coupleId).child('user1').val() === auth.uid || root.child('couples').child($coupleId).child('user2').val() === auth.uid",
        "$noteId": {
          ".validate": "newData.hasChildren(['content', 'authorId', 'createdAt'])",
          "content": {
            ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 1000"
          },
          "authorId": {
            ".validate": "newData.isString() && newData.val() === auth.uid"
          },
          "createdAt": {
            ".validate": "newData.isNumber()"
          },
          "emoji": {
            ".validate": "newData.isString() && newData.val().length <= 10"
          },
          "color": {
            ".validate": "newData.isString() && newData.val().matches(/^#[0-9A-Fa-f]{6}$/)"
          },
          "isPrivate": {
            ".validate": "newData.isBoolean()"
          },
          "$other": {
            ".validate": false
          }
        }
      }
    },
    
    "memories": {
      "$coupleId": {
        ".read": "auth != null && root.child('couples').child($coupleId).child('user1').val() === auth.uid || root.child('couples').child($coupleId).child('user2').val() === auth.uid",
        ".write": "auth != null && root.child('couples').child($coupleId).child('user1').val() === auth.uid || root.child('couples').child($coupleId).child('user2').val() === auth.uid",
        "$memoryId": {
          ".validate": "newData.hasChildren(['title', 'date', 'authorId', 'createdAt'])",
          "title": {
            ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 200"
          },
          "description": {
            ".validate": "newData.isString() && newData.val().length <= 1000"
          },
          "date": {
            ".validate": "newData.isString() && newData.val().matches(/^\\d{4}-\\d{2}-\\d{2}$/)"
          },
          "authorId": {
            ".validate": "newData.isString() && newData.val() === auth.uid"
          },
          "createdAt": {
            ".validate": "newData.isNumber()"
          },
          "photos": {
            "$photoId": {
              ".validate": "newData.isString()"
            }
          },
          "tags": {
            "$tagId": {
              ".validate": "newData.isString() && newData.val().length <= 50"
            }
          },
          "$other": {
            ".validate": false
          }
        }
      }
    },
    
    "calendar": {
      "$coupleId": {
        ".read": "auth != null && root.child('couples').child($coupleId).child('user1').val() === auth.uid || root.child('couples').child($coupleId).child('user2').val() === auth.uid",
        ".write": "auth != null && root.child('couples').child($coupleId).child('user1').val() === auth.uid || root.child('couples').child($coupleId).child('user2').val() === auth.uid",
        "$eventId": {
          ".validate": "newData.hasChildren(['title', 'date', 'authorId', 'createdAt'])",
          "title": {
            ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 200"
          },
          "description": {
            ".validate": "newData.isString() && newData.val().length <= 500"
          },
          "date": {
            ".validate": "newData.isString() && newData.val().matches(/^\\d{4}-\\d{2}-\\d{2}$/)"
          },
          "time": {
            ".validate": "newData.isString() && newData.val().matches(/^\\d{2}:\\d{2}$/)"
          },
          "authorId": {
            ".validate": "newData.isString() && newData.val() === auth.uid"
          },
          "createdAt": {
            ".validate": "newData.isNumber()"
          },
          "type": {
            ".validate": "newData.isString() && (newData.val() === 'anniversary' || newData.val() === 'date' || newData.val() === 'reminder' || newData.val() === 'special')"
          },
          "isRecurring": {
            ".validate": "newData.isBoolean()"
          },
          "$other": {
            ".validate": false
          }
        }
      }
    },
    
    "settings": {
      "$coupleId": {
        ".read": "auth != null && root.child('couples').child($coupleId).child('user1').val() === auth.uid || root.child('couples').child($coupleId).child('user2').val() === auth.uid",
        ".write": "auth != null && root.child('couples').child($coupleId).child('user1').val() === auth.uid || root.child('couples').child($coupleId).child('user2').val() === auth.uid",
        "theme": {
          ".validate": "newData.isString() && (newData.val() === 'pink' || newData.val() === 'purple' || newData.val() === 'blue' || newData.val() === 'green')"
        },
        "privacy": {
          "profileVisibility": {
            ".validate": "newData.isString() && (newData.val() === 'public' || newData.val() === 'private' || newData.val() === 'friends')"
          },
          "allowNotifications": {
            ".validate": "newData.isBoolean()"
          }
        },
        "notifications": {
          "anniversaryReminder": {
            ".validate": "newData.isBoolean()"
          },
          "newNoteAlert": {
            ".validate": "newData.isBoolean()"
          },
          "calendarReminder": {
            ".validate": "newData.isBoolean()"
          }
        },
        "$other": {
          ".validate": false
        }
      }
    },
    
    "$other": {
      ".validate": false
    }
  }
}